!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/common"),require("@angular/core"),require("@ionic-native/file"),require("ionic-angular"),require("lodash")):"function"==typeof define&&define.amd?define("ionic-log-file-appender",["exports","@angular/common","@angular/core","@ionic-native/file","ionic-angular","lodash"],t):t((e=e||self)["ionic-log-file-appender"]={},e.ng.common,e.ng.core,e.file,e.IonicModule,e.lodash)}(this,(function(e,t,i,n,o,r){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */function l(e,t,i,n){return new(i||(i=Promise))((function(o,r){function l(e){try{s(n.next(e))}catch(e){r(e)}}function a(e){try{s(n.throw(e))}catch(e){r(e)}}function s(e){var t;e.done?o(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(l,a)}s((n=n.apply(e,t||[])).next())}))}function a(e,t){var i,n,o,r,l={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return r={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function a(r){return function(a){return function(r){if(i)throw new TypeError("Generator is already executing.");for(;l;)try{if(i=1,n&&(o=2&r[0]?n.return:r[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,r[1])).done)return o;switch(n=0,o&&(r=[2&r[0],o.value]),r[0]){case 0:case 1:o=r;break;case 4:return l.label++,{value:r[1],done:!1};case 5:l.label++,n=r[1],r=[0];continue;case 7:r=l.ops.pop(),l.trys.pop();continue;default:if(!(o=l.trys,(o=o.length>0&&o[o.length-1])||6!==r[0]&&2!==r[0])){l=0;continue}if(3===r[0]&&(!o||r[1]>o[0]&&r[1]<o[3])){l.label=r[1];break}if(6===r[0]&&l.label<o[1]){l.label=o[1],o=r;break}if(o&&l.label<o[2]){l.label=o[2],l.ops.push(r);break}o[2]&&l.ops.pop(),l.trys.pop();continue}r=t.call(e,l)}catch(e){r=[6,e],n=0}finally{i=o=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,a])}}}function s(e){var t="function"==typeof Symbol&&Symbol.iterator,i=t&&e[t],n=0;if(i)return i.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}var g=function(){function e(e,t,i){this.file=e,this.platform=t,this.datePipe=i,this.fileLoggerReady=!1,this.initFailed=!1,this.queue=[],this.processing=!1,this.defaultConfig=new u({enableMetaLogging:!1,logToConsole:!1,logDateFormat:"yyyy-MM-dd HH:mm:ss.SSS",fileDateFormat:"yyyy-MM-dd_HH-mm-ss-SSS",fileMaxLines:2e3,fileMaxSize:1e6,totalLogSize:5e6,baseDir:null,logDir:"logs",logPrefix:"log",devMode:!1}),this.config=this.defaultConfig}return e.prototype.init=function(e){var t=this;return this.platform.ready().then((function(){return t.config=new u(e),t.config.merge(t.defaultConfig),t.config.baseDir||(t.config.baseDir=t.file.dataDirectory),t.debug_metaLog("LogProvider initialised with configuration: "+JSON.stringify(t.config)),t.fileLoggerReady=!1,t.debug_metaLog("Initialising file logger"),t.log("Initialising file logger"),t.platform.is("cordova")?(t.debug_metaLog("Data directory: "+t.config.baseDir),t.file.checkDir(t.config.baseDir,t.config.logDir).then((function(){return t.debug_metaLog("Found logging directory"),t.initLogFile()})).catch((function(e){return t.debug_metaLog("Could not find logging directory: "+JSON.stringify(e)),t.createLogDir()}))):(t.debug_metaLog("Not initialising file logger as the it is not supported by the platform "+t.platform.url()),t.initFailed=!0,Promise.resolve())}))},e.prototype.isReady=function(){return this.fileLoggerReady},e.prototype.createLogDir=function(){var e=this;return this.debug_metaLog("Attempting to create logging directory"),this.file.createDir(this.config.baseDir,this.config.logDir,!1).then((function(){return e.debug_metaLog("Successfully created logging directory"),e.initLogFile()})).catch((function(t){e.initFailed=!0,e.debug_metaLog("Failed to create logging directory: "+JSON.stringify(t))}))},e.prototype.initLogFile=function(){var e=this;return this.debug_metaLog("Attempting to initialise log file"),this.file.listDir(this.config.baseDir,this.config.logDir).then((function(t){return t&&t.length>0?(e.debug_metaLog(t.length+" existing log files found."),e.cleanupFiles(t)):(e.debug_metaLog("No existing log files found."),e.cleanupCompleted(null,0,null))})).catch((function(t){throw e.debug_metaLog("Failed to get file list: "+JSON.stringify(t,Object.getOwnPropertyNames(t))),t}))},e.prototype.cleanupFiles=function(e){return l(this,void 0,void 0,(function(){var t,i,n,o,l,g,u,c,f,h,d,p,m=this;return a(this,(function(a){switch(a.label){case 0:if(this.debug_metaLog("Starting cleanup of "+e.length+" log files"),0===(e=r.filter(e,(function(e){return e.isFile&&e.name&&e.name.startsWith(m.config.logPrefix)}))).length)return[2,this.cleanupCompleted(null,0,null).catch((function(e){throw m.initFailed=!0,e}))];e=r.orderBy(e,["name"],["asc"]),n=e.length,o=0,l=0,a.label=1;case 1:a.trys.push([1,10,,11]),a.label=2;case 2:a.trys.push([2,7,8,9]),g=s(e),u=g.next(),a.label=3;case 3:return u.done?[3,6]:(c=u.value,[4,this.getFileSize(c)]);case 4:if(f=a.sent(),o++,l+=f,this.debug_metaLog("After "+o+" files, total size is "+l),l>this.config.totalLogSize)return this.debug_metaLog("Total log file size exceeds limit: "+l),[2,this.maxSizeExceeded(e,f).catch((function(e){throw m.initFailed=!0,e}))];if(o===n)return this.debug_metaLog("Total log file size is ok: "+l),p=e.length>0?e[e.length-1]:null,[2,this.cleanupCompleted(p,f,null).catch((function(e){throw m.initFailed=!0,e}))];a.label=5;case 5:return u=g.next(),[3,3];case 6:return[3,9];case 7:return h=a.sent(),t={error:h},[3,9];case 8:try{u&&!u.done&&(i=g.return)&&i.call(g)}finally{if(t)throw t.error}return[7];case 9:return[3,11];case 10:return d=a.sent(),p=e.length>0?e[e.length-1]:null,[2,this.cleanupCompleted(p,0,d).catch((function(e){throw m.initFailed=!0,e}))];case 11:return[2]}}))}))},e.prototype.getFileSize=function(e){return l(this,void 0,void 0,(function(){return a(this,(function(t){return[2,new Promise((function(t,i){e.getMetadata((function(e){t(e.size)}),(function(e){i("SEVERE ERROR: could not retrieve metadata. "+JSON.stringify(e))}))}))]}))}))},e.prototype.maxSizeExceeded=function(e,t){var i=this;return this.removeFile(e[0]).then((function(){return i.debug_metaLog("Entry successfully removed"),e.shift(),i.cleanupFiles(e)})).catch((function(n){var o=e.length>0?e[e.length-1]:null;return i.cleanupCompleted(o,t,"SEVERE ERROR: could not clean up old files. "+n)}))},e.prototype.cleanupCompleted=function(e,t,i){var n=this;return this.debug_metaLog("Log file cleanup done"),e&&t<this.config.fileMaxSize?(this.currentFile=e,this.fileLoggerReady=!0,i&&this.log(i),this.debug_metaLog("File logger initialised at existing file: "+this.currentFile.fullPath),this.log("File logger initialised at existing file: "+this.currentFile.name),Promise.resolve()):(this.debug_metaLog("Last file nonexistent or too large. Creating new log file"),this.createNextFile().then((function(){return n.fileLoggerReady=!0,i&&n.log(i),n.debug_metaLog("File logger initialised at new file: "+n.currentFile.fullPath),n.log("File logger initialised at new file: "+n.currentFile.name),Promise.resolve()})))},e.prototype.removeFile=function(e){this.debug_metaLog("Removing file: "+e.fullPath);var t=e.fullPath.replace(e.name,"");return this.file.removeFile(this.config.baseDir+t,e.name)},e.prototype.logInternal=function(e,t){var i=new Date,n="["+this.datePipe.transform(i,this.config.logDateFormat)+"] "+e+"\r\n";this.config.logToConsole&&(t?console.error(n):console.log(n)),this.initFailed?this.debug_metaLog("File logger init has failed! Message discarded"):(this.queue.push(n),this.fileLoggerReady?this.queue.length>0&&!this.processing&&(this.processing=!0,this.doProcess()):this.debug_metaLog("File logger is not ready! Message left on queue"))},e.prototype.log=function(e){this.logInternal(e,!1)},e.prototype.logDev=function(e){this.config.devMode&&this.log("*DEBUG* "+e)},e.prototype.err=function(e,t){var i="ERROR! "+e;t&&(i+=": "+JSON.stringify(t,Object.getOwnPropertyNames(t))),this.logInternal(i,!0)},e.prototype.doProcess=function(){var e=this;this.debug_metaLog("Beginning processing loop"),this.processQueue().then((function(){e.queue.length>0?e.doProcess():e.checkFileLength().then((function(){e.processing=!1})).catch((function(t){e.debug_metaLog("Error checking file length: "+JSON.stringify(t)),e.processing=!1}))})).catch((function(t){e.debug_metaLog("Error processing queue: "+t),e.processing=!1}))},e.prototype.processQueue=function(){var e=this;if(this.debug_metaLog("Processing queue of length "+this.queue.length),this.queue.length>0){var t=this.queue.shift();return this.file.writeFile(this.config.baseDir+"/"+this.config.logDir,this.currentFile.name,t,{append:!0,replace:!1}).then((function(){return e.lines++,e.checkFileLength()})).catch((function(t){e.debug_metaLog("Error writing to file: "+t)}))}return Promise.resolve()},e.prototype.checkFileLength=function(){return this.lines>=this.config.fileMaxLines?(this.debug_metaLog("Creating new file as max number of log entries exceeded"),this.createNextFile()):Promise.resolve()},e.prototype.createLogFileName=function(){var e=new Date,t=this.datePipe.transform(e,this.config.fileDateFormat);return this.config.logPrefix+"."+t+".log"},e.prototype.createNextFile=function(){var e=this,t=this.createLogFileName();return this.debug_metaLog("Attempting to create file at: "+this.config.baseDir+this.config.logDir+"/"+t),this.file.createFile(this.config.baseDir+"/"+this.config.logDir,t,!0).then((function(t){e.lines=0,e.currentFile=t,e.debug_metaLog("Created new file: "+e.currentFile.fullPath)})).catch((function(t){e.debug_metaLog("Failed to create new file: "+JSON.stringify(t))}))},e.prototype.getLogFiles=function(){return this.debug_metaLog("Attempting to retrieve log files"),this.initFailed?(this.debug_metaLog("Log never initialised so can't retrieve files"),Promise.resolve([])):this.file.listDir(this.config.baseDir,this.config.logDir)},e.prototype.debug_metaLog=function(e){this.config.enableMetaLogging&&console.log("**LOGGER_META**: "+e)},e.decorators=[{type:i.Injectable}],e.ctorParameters=function(){return[{type:n.File},{type:o.Platform},{type:t.DatePipe}]},e}();var u=function(){function e(e){for(var t in e)this[t]=e[t]}return e.prototype.merge=function(e){for(var t in e)t in this||(this[t]=e[t])},e}();var c=function(){function e(){}return e.forRoot=function(){return{ngModule:e,providers:[g]}},e.forChild=function(){return{ngModule:e,providers:[g]}},e.decorators=[{type:i.NgModule,args:[{imports:[t.CommonModule],providers:[g]}]}],e}();e.LogFileAppenderModule=c,e.LogProvider=g,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=ionic-log-file-appender.umd.min.js.map